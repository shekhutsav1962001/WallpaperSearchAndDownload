{"version":3,"sources":["API/api.js","components/Card.jsx","App.js","index.js"],"names":["baseURL","API_KEY","process","getTrendingImages","a","url","fetch","res","ok","console","error","status","json","length","getSearchedImages","query","results","Card","urls","download","name","className","href","src","small","alt","title","App","useState","imgList","setImgList","setInput","useEffect","data","fetchData","type","placeholder","onChange","e","target","value","onClick","trim","map","img","orignalurl","split","description","alt_description","join","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAMA,G,MAAU,6BACVC,EAAUC,8CAEHC,EAAiB,uCAAG,gCAAAC,EAAA,sEAErBC,EAFqB,UAEZL,EAFY,6BAEgBC,EAFhB,yBAGPK,MAAMD,GAHC,WAGnBE,EAHmB,QAKhBC,GALgB,uBAMrBC,QAAQC,MAAM,SAAUH,EAAII,QANP,2CAUNJ,EAAIK,OAVE,aAUnBA,EAVmB,QAWhBC,OAXgB,0CAYdD,GAZc,iCAed,IAfc,iEAmBzBH,QAAQC,MAAM,0BAAd,MAnByB,kBAoBlB,IApBkB,0DAAH,qDA0BjBI,EAAiB,uCAAG,WAAOC,GAAP,mBAAAX,EAAA,sEAIrBC,EAJqB,UAIZL,EAJY,oCAIuBC,EAJvB,8BAIoDc,GAJpD,SAKPT,MAAMD,GALC,WAKnBE,EALmB,QAOhBC,GAPgB,uBAQrBC,QAAQC,MAAM,SAAUH,EAAII,QARP,2CAYNJ,EAAIK,OAZE,aAYnBA,EAZmB,QAahBI,QAAQH,OAbQ,0CAcdD,EAAKI,SAdS,iCAiBd,IAjBc,iEAoBzBP,QAAQC,MAAM,0BAAd,MApByB,kBAqBlB,IArBkB,0DAAH,sD,OCnBfO,MATf,YAAwC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,SAClB,OADmC,EAARC,KAEvB,qBAAKC,UAAU,OAAf,SACI,oBAAGC,KAAMH,EAAT,cAAoB,qBAAKE,UAAU,eAAeE,IAAKL,EAAKM,MAAOC,IAAI,QAAQC,MAAM,4BCiElFC,MAhEf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOb,EAAP,KAAcgB,EAAd,KA8BA,OA3BAC,qBAAU,WAAM,4CACd,4BAAA5B,EAAA,sEACqBD,IADrB,QACQ8B,EADR,SAGIH,EAAWG,GAHf,4CADc,uBAAC,WAAD,wBAOdC,KACC,IAoBD,qCAEE,sBAAKb,UAAU,eAAf,UACE,uBAAOc,KAAK,OAAOC,YAAY,2BAA2BC,SAAU,SAACC,GAAD,OAAOP,EAASO,EAAEC,OAAOC,UAC7F,wBAAQC,QAlBd,WAAmB,4CAIjB,4BAAArC,EAAA,sEACqBU,EAAkBC,GADvC,QACQkB,EADR,SAGIH,EAAWG,GAHf,4CAJiB,sBACI,KAAjBlB,EAAM2B,QADO,mCAUjBR,IAQI,uBAGkB,IAAnBL,EAAQhB,OAAe,iDAA2B,KACnD,qBAAKQ,UAAU,eAAf,SACGQ,EAAQc,KAAI,SAACC,GACZ,IAAIC,EAAaD,EAAI1B,KAAKM,MAAMsB,MAAM,KAAK,GACvCC,EAAcH,EAAII,gBAQtB,OANED,EADEA,EACYA,EAAYD,MAAM,KAAKG,KAAK,KAG5B,YAEhBF,GAAe,OAEb,cAAC,EAAD,CACE7B,KAAM0B,EAAI1B,KAEVC,SAAU0B,EAAa3C,2DAAqC6C,GADvDH,EAAIM,a,MCrDvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7580039c.chunk.js","sourcesContent":["const baseURL = \"https://api.unsplash.com/\";\r\nconst API_KEY = process.env.REACT_APP_API_KEY2;\r\n\r\nexport const getTrendingImages = async () => {\r\n    try {\r\n        let url = `${baseURL}/photos?client_id=${API_KEY}&per_page=30`;\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            console.error(\"failed\", res.status);\r\n            return;\r\n        }\r\n\r\n        const json = await res.json();\r\n        if (json.length) {\r\n            return json;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(\"error in making request\", error);\r\n        return [];\r\n    }\r\n\r\n};\r\n\r\n/** Return the searched images */\r\nexport const getSearchedImages = async (query) => {\r\n\r\n\r\n    try {\r\n        let url = `${baseURL}/search/photos?client_id=${API_KEY}&per_page=30&query=${query}`;\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            console.error(\"failed\", res.status);\r\n            return;\r\n        }\r\n\r\n        const json = await res.json();\r\n        if (json.results.length) {\r\n            return json.results;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    } catch (error) {\r\n        console.error(\"error in making request\", error);\r\n        return [];\r\n    }\r\n\r\n};","import React from 'react'\r\nfunction Card({ urls, download,name }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <a href={download}> <img className=\"card-img-top\" src={urls.small} alt=\"Card \" title=\"click to download\" /></a>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport { getSearchedImages, getTrendingImages } from './API/api'\nimport Card from './components/Card'\nfunction App() {\n  const [imgList, setImgList] = useState([]);\n  const [query, setInput] = useState(\"\");\n\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getTrendingImages();\n      if (data) {\n        setImgList(data);\n      }\n    }\n    fetchData()\n  }, []);\n\n  // useEffect(() => {\n\n  // }, [query]);\n\n  function getData() {\n    if (query.trim() === \"\") {\n      return;\n    }\n    async function fetchData() {\n      const data = await getSearchedImages(query);\n      if (data) {\n        setImgList(data);\n      }\n    }\n    fetchData()\n  }\n\n  return (\n    <>\n\n      <div className=\"input-parent\">\n        <input type=\"text\" placeholder=\"Search your image here..\" onChange={(e) => setInput(e.target.value)} />\n        <button onClick={getData}>Search</button>\n      </div>\n\n      {imgList.length === 0 ? <h2>No images found</h2> : null}\n      <div className=\"card-columns\">\n        {imgList.map((img) => {\n          let orignalurl = img.urls.small.split('?')[0]\n          let description = img.alt_description\n          if (description) {\n            description = description.split(' ').join('_');\n          }\n          else {\n            description = \"wallpaper\"\n          }\n          description += \".jpg\"\n          return (\n            <Card\n              urls={img.urls}\n              key={img.id}\n              download={orignalurl + process.env.REACT_APP_API_DOWNLOAD + description}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}